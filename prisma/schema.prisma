// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  // stravaId  String   @unique
  name      String?
  email     String?  @unique
  emailVerified DateTime?
  image     String?
  accounts  Account[]
  stravaProfile StravaProfile?
}

model StravaProfile {
  id            String   @id @default(cuid())
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String   @unique

  username      String?
  firstname     String?
  lastname      String?
  profile       String?
  profileMedium String?
  city          String?
  state         String?
  country       String?
  sex           String?
  createdAt     DateTime?
  updatedAt     DateTime?
  followerCount Int?
  friendCount   Int?
  measurementPreference String?
  resourceState Int?
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
